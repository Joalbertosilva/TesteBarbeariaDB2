

1. Utilização da biblioteca pyodbc para possibilitar a conexão com o banco de dados e o programa SQL Server
dados_conexao = (
    "DRIVER={SQL Server};"
    "SERVER=DESKTOP-E5PU5HI;"
    "DATABASE=Barbearia;"
)
conexao = pyodbc.connect(dados_conexao)
print()
print('Conexão realizada!')
cursor = conexao.cursor()



tabelas:
#Primeiro criei o banco de dados Barbearia
create database Barbearia

use Barbearia #(serve para poder usar somente o banco de dados Barbearia --- Desse jeito tudo que eu crio vai diretamente para esse banco de dados)
create table usuario(
    idUsuario integer primary key,
    email varchar(45),
    senha varchar(45),
    nome varchar(45)
);

create table agenda(
    idAgenda integer primary key,
    nome varchar(45),
    horario TIME,
    dia varchar(45),
    corte varchar(45),
    idUsuario integer not null references usuario(idUsuario)
);

create table horario(
    dia varchar(45),
    horario varchar(45),
    idAgenda integer not null references agenda(idAgenda)
);

como realizar um inner join entre usuario e horario. onde eu vou receber o idUsuario e ele vai procurar

use Barbearia

SELECT u.idUsuario, a.nome, a.dia, a.horario
FROM usuario u
INNER JOIN agenda a ON u.idUsuario = a.idUsuario
WHERE u.idUsuario = '804'

#por enquanto foi isso de tabela que eu fiz, mas to querendo fazer alterações em horarios
#mudanças que eu quero fazer ---- adicionar o id do usuario de uma maneira de foreign key, caso necessário, e talvez retirar a chave
---- primaria da tabela horarios. E tem que mudar o nome dela tbm. Não pode deixar no plural 